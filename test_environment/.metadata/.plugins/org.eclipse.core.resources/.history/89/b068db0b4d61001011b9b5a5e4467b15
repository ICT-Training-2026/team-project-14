package com.generalfunction.demo.config;

import java.util.Collection;
import java.util.Collections;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.generalfunction.demo.entity.Employee;

/**
 * Spring SecurityのUserDetailsを実装したクラス。
 * DBのUserエンティティの情報をSpring Securityの認証情報に変換して提供する。
 */
public class CustomUserDetails implements UserDetails {

    private final Employee employee;

    public CustomUserDetails(Employee employee) {
        this.employee = employee;
    }

    /**
     * ユーザの権限を返す。DBのroleフィールドを"ROLE_"プレフィックス付きでセットする。
     */
    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        // roleが"admin"や"user"などであることを想定
        String role = employee.getRole();
        return Collections.singletonList(new SimpleGrantedAuthority("ROLE_" + role));
    }

    @Override
    public String getPassword() {
        return employee.getPassword();
    }

    @Override
    public String getUsername() {
        return employee.getUsername();
    }

    // 以下は必要に応じて実装。ここではすべてtrueにしている。

    @Override
    public boolean isAccountNonExpired() {
        return true;
    }

    @Override
    public boolean isAccountNonLocked() {
        return true;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true;
    }

    @Override
    public boolean isEnabled() {
        return true;
    }

    /**
     * 必要に応じてUserオブジェクトを取得できるgetterも追加可能
     */
    public Employee getUser() {
        return employee;
    }
}
