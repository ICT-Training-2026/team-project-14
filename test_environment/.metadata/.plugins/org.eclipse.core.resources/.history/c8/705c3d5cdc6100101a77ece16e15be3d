package com.generalfunction.demo.config;

import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.generalfunction.demo.entity.Employee;
import com.generalfunction.demo.repository.login.EmployeeRepository;

import lombok.RequiredArgsConstructor;

@Component
@RequiredArgsConstructor
public class DataInitializer implements ApplicationRunner {
    private final EmployeeRepository employeeRepository;
    private final PasswordEncoder passwordEncoder;

    @Override
    @Transactional
    public void run(ApplicationArguments args) throws Exception {
        // adminユーザーが存在するかチェック
        Employee adminUser = employeeRepository.findByEmployeeName("admin");
        if (adminUser == null) {
            // adminユーザーが存在しなければ作成
            Employee employee = new Employee();
            employee.setUserName("admin");
            employee.setPassword(passwordEncoder.encode("admin")); // 初期パスワードは適宜変更
            employee.setRoleId(1);         // 管理者ロールID（例: 1）
            employee.setDepartmentId(1);   // 部署ID（例: 1。実際の値に合わせてください）
            employee.setIsActive(true);
            // createdAt, updatedAt はDBで自動設定される想定

            employeeRepository.insertEmployee(employee);
            System.out.println("管理者(Admin)ユーザーを初期作成しました。");
            
            Employee normalUser = employeeRepository.findByEmployeeName("user");
            if (normalUser == null) {
                Employee employee_user = new Employee();
                employee_user.setUserName("user");
                employee_user.setPassword(passwordEncoder.encode("user")); // 初期パスワードは適宜変更
                employee_user.setRoleId(2);         // 一般ロールID（例: 2）
                employee_user.setDepartmentId(1);   // 部署ID（例: 1）
                employee_user.setIsActive(true);

                employeeRepository.insertEmployee(employee_user); // ← ここを修正
                System.out.println("一般(User)ユーザーを初期作成しました。");
            }
        }
    }
}